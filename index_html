<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MongoDB Lab 4</title>
    <style>
        * {
            margin: 0px;
            padding: 0px;
            box-sizing: border-box;
        }

        body {
            display: flex;
            justify-content: center;
            background-color: #3b3b3b;
        }

        body > form {
            background-color: #3b3b3b;
            padding: 1rem;
            width: min(50%, 500px);
            color: white;
            padding-top: 2rem;
            text-align: center;
        }

        @media (max-width : 600px) {
            body>form {
                width: 100%;
            }
        }

        button {
            padding: 15px 60px;
            font-size: 1.5em;
            text-shadow: 2px 2px 4px #000000;
            background-color: green;
            color: white;
            border: none;
            border-radius: 10px;
        }
        button:hover{
            cursor: pointer;
            background-color: rgb(59, 141, 59);
        }

        table {
            border-collapse: collapse;
            border-spacing: 0;
            width: 100%;
            margin-top: 1rem;
        }

        th,
        td {
            padding: 10px 20px;
            border: 1px solid rgb(133, 132, 132);
        }

        th {
            background-color: #b704c7;
            font-size: 1.5rem;
            text-shadow: 2px 2px 4px #000000;
        }

        tr:nth-child(2n) {
            background-color: rgb(109, 109, 109);
        }

        @keyframes loading {
            0% {
                opacity: 0.25;
            }

            25% {
                opacity: 0.25;
            }

            50% {
                opacity: 0.5;
            }

            75% {
                opacity: 0.75;
            }

            100% {
                opacity: 1;
            }
        }
        #loading {
            display: none;
            color: #b704c7;
            font-size: 1.5rem;
            font-weight: bold;
            animation: loading 0.5s infinite;
            justify-self: center;
        }
    </style>
</head>

<body>
    <form>
		<input type="text" name="year" id="year">
        <button>Get Data</button>
        <div id="loading"></div>
        <div id="table_div"></div>
    </form>
    <script>
        const btn = document.querySelector("button")
        const table_div = document.querySelector("#table_div")
        const loading = document.querySelector("#loading")
		const year = document.querySelector("#year")
        let table = document.createElement('table');
        let thead = document.createElement('thead');
        let tbody = document.createElement('tbody');
        table.appendChild(thead);
        table.appendChild(tbody);
		year.addEventListener("focusout",()=>{
		
			alert("gere")
		})
		
		
		
        btn.addEventListener('click', (e) => {
            e.preventDefault()
            loading.style.display = 'block'
            loading.innerHTML = "Loading Data.."
			var data = new FormData();
			data.append("year", year.value);
            fetch('first.php', { method: "POST", body: data })
                .then(res => res.json())
                .then(data => {
                    removeAllChildNodes(thead)
                    removeAllChildNodes(tbody)
                    if (!data.hasOwnProperty("status")) {
                        makeTableHeader(["Year", "Title"])
                        data.forEach(element => {
                            makeTableDataRow([element.year, element.title])
                        });
                        table_div.appendChild(table)
                    }
                    else {
                        loading.innerHTML = "No Data return from collection"
                    }
                }).finally(()=>{
                    if (loading.innerHTML == "Loading Data.."){
                        loading.style.display = 'none'
                    }                     
                })
        })
        /*
    This function accepts an array of the column headings
    and create a row to be added to the table in with the 
    column heading
    */
        function makeTableHeader(coloumns) {
            let header_row = document.createElement('tr');
            coloumns.forEach(item => {
                let heading = document.createElement('th');
                heading.innerHTML = item;
                header_row.appendChild(heading);
            })
            thead.appendChild(header_row);
        }
        /*
        This function accepts an array of the row data
        and create a row to be added to the table in with the 
        record data
        */
        function makeTableDataRow(row_data) {
            let data_row = document.createElement('tr');
            row_data.forEach(item => {
                let row = document.createElement('td');
                row.innerHTML = item;
                data_row.appendChild(row);
            })
            tbody.appendChild(data_row);
        }
        function removeAllChildNodes(parent) {
            while (parent.firstChild) parent.removeChild(parent.firstChild);
        }
    </script>
</body>

</html>
